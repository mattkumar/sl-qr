[{"name":"app.R","content":"library(shiny)\r\nlibrary(ggplot2)\r\nlibrary(qrcode)\r\nlibrary(officer)\r\n\r\n# some data\r\nset.seed(123)\r\npatient_data <- data.frame(\r\n  id = paste0(\"P\", sprintf(\"%02d\", 1:10)),\r\n  sex = sample(c(\"Male\", \"Female\"), 10, replace = TRUE),\r\n  age_group = sample(c(\"18-30\", \"31-50\", \"51-70\", \"70+\"), 10, replace = TRUE),\r\n  biomarker = sample(c(\"Positive\", \"Negative\", \"Borderline\"), 10, replace = TRUE),\r\n  stringsAsFactors = FALSE\r\n)\r\n\r\n# ui\r\nui <- fluidPage(\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"x_var\", \"X-axis Variable:\", \r\n                  choices = c(\"sex\", \"age_group\", \"biomarker\"), \r\n                  selected = \"sex\"),\r\n      selectInput(\"fill_var\", \"Fill Variable:\", \r\n                  choices = c(\"sex\", \"age_group\", \"biomarker\"), \r\n                  selected = \"biomarker\"),\r\n      downloadButton(\"download_plot\", \"Download Plot\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"stacked_plot\", height = \"500px\")\r\n    )\r\n  )\r\n)\r\n\r\n# server\r\nserver <- function(input, output, session) {\r\n  \r\n  create_plot <- reactive({\r\n    if (input$x_var == input$fill_var) return(NULL)\r\n    \r\n    plot_data <- aggregate(id ~ get(input$x_var) + get(input$fill_var), \r\n                           data = patient_data, \r\n                           FUN = length)\r\n    names(plot_data) <- c(\"x_var\", \"fill_var\", \"n\")\r\n    \r\n    ggplot(plot_data, aes(x = x_var, y = n, fill = fill_var)) +\r\n      geom_col(position = \"dodge\", alpha = 0.8, color = \"white\", size = 0.5) +\r\n      geom_text(aes(label = n), position = position_dodge(width = 0.9), vjust = -0.5, \r\n                fontface = \"bold\", size = 4) +\r\n      labs(title = paste(\"Bar Plot:\", input$x_var, \"by\", input$fill_var),\r\n           x = tools::toTitleCase(gsub(\"_\", \" \", input$x_var)),\r\n           y = \"Count\",\r\n           fill = tools::toTitleCase(gsub(\"_\", \" \", input$fill_var))) +\r\n      theme_minimal(base_size = 14) +\r\n      theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\r\n            legend.position = \"bottom\") +\r\n      scale_fill_viridis_d(option = \"plasma\", begin = 0.2, end = 0.8)\r\n  })\r\n  \r\n  output$stacked_plot <- renderPlot({\r\n    plot_obj <- create_plot()\r\n    if (is.null(plot_obj)) {\r\n      ggplot() + annotate(\"text\", x = 0.5, y = 0.5, \r\n                          label = \"Please select different variables\", \r\n                          size = 6, color = \"gray50\") + theme_void() + xlim(0, 1) + ylim(0, 1)\r\n    } else plot_obj\r\n  })\r\n  \r\n  output$download_plot <- downloadHandler(\r\n    filename = function() paste0(\"result_with_qr_\", Sys.Date(), \".pptx\"),\r\n    content = function(file) {\r\n      plot_obj <- create_plot()\r\n      if (is.null(plot_obj)) stop(\"No plot to save\")\r\n      \r\n      png_f <- tempfile(fileext = \".png\")\r\n      ggsave(png_f, plot_obj, width = 12, height = 8, dpi = 300, bg = \"white\")\r\n      \r\n      qr_data <- paste(\"User matt\\nDate\", Sys.Date(), \"\\nFilters\", input$x_var, input$fill_var)\r\n      qr_png_f <- tempfile(fileext = \".png\")\r\n      png(qr_png_f, width = 200, height = 200)\r\n      plot(qrcode::qr_code(qr_data))\r\n      dev.off()\r\n      \r\n      officer::read_pptx() %>%\r\n        officer::add_slide(layout = \"Title and Content\", master = \"Office Theme\") %>%\r\n        officer::ph_with(value = officer::external_img(png_f, width = 10, height = 6.67),\r\n                         location = officer::ph_location_type(type = \"body\")) %>%\r\n        officer::ph_with(value = officer::external_img(qr_png_f, width = 0.5, height = 0.5),\r\n                         location = officer::ph_location(left = 8.5, top = 0.5, width = 0.75, height = 0.75)) %>%\r\n        print(target = file)\r\n    }\r\n  )\r\n}\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"sl-qr.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
