[{"name":"app.R","content":"library(shiny)\r\nlibrary(qrcode)\r\nlibrary(officer)\r\n\r\nset.seed(123)\r\npatient_data <- data.frame(\r\n  id = paste0(\"P\", sprintf(\"%02d\", 1:10)),\r\n  weight = runif(10, min = 110, max = 210),\r\n  height = runif(10, min = 150, max = 184),\r\n  age = rnorm(10, mean = 30, sd = 10),\r\n  stringsAsFactors = FALSE\r\n)\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Demo: Plot with QR Code\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"x_var\", \"X-axis Variable:\", \r\n                  choices = c(\"weight\", \"height\", \"age\"), \r\n                  selected = \"weight\"),\r\n      selectInput(\"y_var\", \"Y-axis Variable:\", \r\n                  choices = c(\"weight\", \"height\", \"age\"), \r\n                  selected = \"height\"),\r\n      downloadButton(\"download_plot\", \"Download Plot\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"scatter_plot\", height = \"500px\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  create_plot <- reactive({\r\n    function() {\r\n      plot(patient_data[[input$x_var]], patient_data[[input$y_var]],\r\n           xlab = input$x_var,\r\n           ylab = input$y_var,\r\n           main = paste(\"Plot:\", input$x_var, \"vs\", input$y_var),\r\n           pch = 16, col = \"blue\", cex = 1.2)\r\n    }\r\n  })\r\n  \r\n  output$scatter_plot <- renderPlot({\r\n    plot_func <- create_plot()\r\n    plot_func()\r\n  })\r\n  \r\n  output$download_plot <- downloadHandler(\r\n    filename = function() paste0(\"result_with_qr_\", Sys.Date(), \".pptx\"),\r\n    content = function(file) {\r\n      plot_func <- create_plot()\r\n      \r\n      png_f <- tempfile(fileext = \".png\")\r\n      png(png_f, width = 1200, height = 800, res = 300, bg = \"white\")\r\n      plot_func()\r\n      dev.off()\r\n      \r\n      qr_data <- paste(\"User matt\\nDate\", Sys.Date(), \"\\nFilters\", input$x_var, input$y_var)\r\n      qr_png_f <- tempfile(fileext = \".png\")\r\n      png(qr_png_f, width = 200, height = 200)\r\n      plot(qrcode::qr_code(qr_data))\r\n      dev.off()\r\n      \r\n      officer::read_pptx() %>%\r\n        officer::add_slide(layout = \"Title and Content\", master = \"Office Theme\") %>%\r\n        officer::ph_with(value = officer::external_img(png_f, width = 10, height = 6.67),\r\n                         location = officer::ph_location_type(type = \"body\")) %>%\r\n        officer::ph_with(value = officer::external_img(qr_png_f, width = 0.5, height = 0.5),\r\n                         location = officer::ph_location(left = 8.5, top = 0.5, width = 0.75, height = 0.75)) %>%\r\n        print(target = file)\r\n    }\r\n  )\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n","type":"text"},{"name":"sl-qr.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
